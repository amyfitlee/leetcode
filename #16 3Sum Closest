class Solution {
public:
	int threeSumClosest(vector<int>& nums, int target) {
		sort(nums.begin(), nums.end());
		int n = nums.size();
		int gap_p = INT_MAX;
		int gap_n = INT_MAX;
		for (int i = 0; i < n; ++i) {
			if (i > 0 && nums[i] == nums[i - 1]) continue;
			int l = i + 1, r = n - 1;
			while (l < r) {
				int sum = nums[l] + nums[r] + nums[i];
				if (sum == target) return target;
				else if (sum < target) {
					gap_p = min(gap_p, target - sum);
					++l;
				}
				else {
					gap_n = min(gap_n, sum - target);
					--r;
				}
			}
		}
		if (gap_p > gap_n || gap_p == INT_MAX) return target + gap_n;
		else return target - gap_p;
	}
};
