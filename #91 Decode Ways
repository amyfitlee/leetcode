class Solution {
public:
    int numDecodings(string s) {
        int n = s.size();
        vector<int> dp(n + 1 , 0);
        dp[n] = 1;
        for(int i = n - 1; i >= 0; --i){
            if(s[i] == '0') dp[i] = 0;
            else{
                dp[i] = dp[i + 1];
                if(i + 1 < n && (s[i] == '1' || (s[i] == '2' && s[i + 1] < '7'))) dp[i] += dp[i + 2];
            }
        }
        return s.empty() ? 0 : dp[0];
        
    }
};


class Solution {
public:
    int numDecodings(string s) {
        if(s.empty() || s[0] == '0') return 0;
        int n = s.size();
        vector<int> dp(n + 1 , 1);
        for(int i = 2; i <= n; ++i){
            
            int tmp = stoi(s.substr(i - 2, 2));
            if(s[i - 1] == '0'){
                if(tmp  == 10 || tmp == 20) dp[i] = dp[i - 2];
                else return 0;
            }
            else{
                if(tmp > 10 && tmp <= 26) dp[i] = dp[i - 1] + dp[i - 2];
                else dp[i] = dp[i - 1];
            }
        }
        return dp[n];
        
    }
};
