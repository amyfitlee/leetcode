class Solution {
public:
    int maxPoints(vector<vector<int>>& points) {
        int n = points.size();
        if(n < 3) return n;
        int res = 0;
        for(int i = 0; i < n; ++i){
            map<pair<int, int>, int> m;
            //unordered_map<pair<int,int>, int> m;
            int same = 0, vertical = 0, locmax = 0;
            for(int j = i + 1; j < n; ++j){
                if(points[j][0] == points[i][0] && points[j][1] == points[i][1]){
                    ++same;
                    continue;
                }
                else if(points[j][0] == points[i][0]){
                    ++vertical;
                }
                else{
                    int a = points[j][0] - points[i][0];
                    int b = points[j][1] - points[i][1];
                    int gcd = GCD(a, b);
                    a /= gcd;
                    b /= gcd;
                    ++m[{a, b}];
                    locmax = max(locmax, m[{a,b}]);
                }
                locmax = max(locmax,vertical);
            }
            res = max(res, locmax + same + 1);
        }
        return res;
    }
    private:
    int GCD(int a, int b) {
        if(b == 0) return a;
        return GCD(b, a%b);
    }
};
