class Solution {
public:
    void reorderList(ListNode* head) {
        if(!head ||!head->next) return;
        ListNode* slow = head;
        ListNode* fast = head;
        while(fast->next && fast->next->next){
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode* premid = slow;
        ListNode* cur = slow->next;
        while(cur && cur->next){
            ListNode* next = cur->next;
            cur->next = next->next;
            next->next = premid->next;
            premid->next = next;
        }
        cur = head;
        while(cur != premid){
            ListNode* next = premid->next;
            premid->next = premid->next->next;
            next->next = cur->next;
            cur->next = next;
            cur = cur->next->next;
        }
        
    }
};


class Solution {
public:
    void reorderList(ListNode* head) {
        if(!head ||!head->next) return;
        ListNode* cur = head;
        while(cur->next && cur->next->next){
            cur = cur->next;
        }
        ListNode* next = cur->next;
        cur->next = nullptr;
        next->next = head->next;
        head->next = next;
        reorderList(next->next);
        
    }
};
