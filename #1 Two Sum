Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].


Sol 1:
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> ans;
        unordered_map<int,int> math_map;
        
        for(int i = 0; i < nums.size(); ++i){
            math_map[nums[i]] = i;
        
        for(int i = 0; i < nums.size(); ++i){
            auto iter = math_map.find(target - nums[i]);
            if(iter != math_map.end() && (iter->second) != i){
                ans.push_back(i);
                ans.push_back(iter->second);
                return ans;
            }
            
        }
        }
        return ans;
    }
};
