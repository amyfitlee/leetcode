class Solution {
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>> ans;
        vector<int> cur;
        dfs(ans, cur, 1, k, n);
        return ans;
    }
    void dfs(vector<vector<int>>& ans, vector<int>& cur, int s, int k, int n){
        if(n == 0 && k == 0){
            ans.push_back(cur);
            return;
        }
        if(k == 0) return;
        if(n == 0) return;
        for(int i = s; i < 10; ++i){
            if(n - i < 0) break;
            cur.push_back(i);
            dfs(ans, cur, i + 1, k - 1, n - i);
            cur.pop_back();
        }
    }
};
